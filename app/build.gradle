plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        //define multiple sign keys here
        signKey1Config {
            storeFile file('your_key_1.jks')
            keyAlias 'your_key_1'
            keyPassword 'your_key_1_pswd'
            storePassword 'your_key_1_pswd'
        }

        signKey2Config {
            storeFile file('your_key_2.jks')
            keyAlias 'your_key_2'
            keyPassword 'your_key_2_pswd'
            storePassword 'your_key_2_pswd'
        }
    }

    def FIELD_NAME_BUILD_CONFIG_FIELD = "BUILD_CONFIG_FIELD"
    def FIELD_NAME_BASE_URL = "FIELD_NAME_BASE_URL"

    flavorDimensions 'flavors'
    productFlavors {
        flavor1 {
            dimension 'flavors'
            applicationId 'com.example.productflavors1'
            versionCode 1
            versionName '1.0.0'
            signingConfig signingConfigs.signKey1Config//specify sign key here
            resValue "string", "resvalue1", "valueFromGradle1"//create resource value from here.
            buildConfigField 'int', FIELD_NAME_BUILD_CONFIG_FIELD, "1"//create build config field
        }

        flavor2 {
            dimension 'flavors'
            applicationId 'com.example.productflavors2'
            versionCode 1
            versionName '1.0.0'
            signingConfig signingConfigs.signKey2Config//specify sign key here
        }

        flavor3 {
            dimension 'flavors'
            applicationId 'com.example.productflavors3'
            versionCode 1
            versionName '1.0.0'
            signingConfig signingConfigs.debug//specify sign key here.
        }
    }

    buildTypes {//define build variants here.

        debug {
            versionNameSuffix "-dev"
        }

        staging {
            debuggable true
            minifyEnabled true
            shrinkResources true
            matchingFallbacks = ["release"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    applicationVariants.all { variant ->

        //create build config field based on flavor and build variant.
        if (variant.getName() == "flavor1Debug") {
            variant.buildConfigField "String", FIELD_NAME_BASE_URL, "\"https://your_base_url\""
        } else if (variant.getName() == "flavor2Staging") {
            variant.buildConfigField "String", FIELD_NAME_BASE_URL, "\"https://your_base_url\""
        } else if (variant.getName() == "flavor3Release") {
            variant.buildConfigField "String", FIELD_NAME_BASE_URL, "\"https://your_base_url\""
        }


        //giving app name based on the flavour.
        variant.outputs.all { output ->
            def flavor = variant.productFlavors[0].name
            def buildType = variant.buildType.name
            def SEP = "_"
            def project = ""
            def buildTypeName = ""
            switch (flavor) {
                case "flavor1":
                    project = "App name 1"
                    break
                case "flavor2":
                    project = "App name 2"
                    break
                case "flavor3":
                    project = "App name 3"
                    break
            }

            //attach "Test" to app name in debug build
            if (buildType != "debug") buildTypeName = "" else buildTypeName = " " + "Test"
            resValue "string", "app_name", "$project$buildTypeName"

            //create apk file  with flavour_buildType_version_date name
            def version = variant.versionName
            def date = new Date();
            def formattedDate = date.format('dd_MM_yy_hh_mm_a')
            def newApkName = project + SEP + flavor + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"
            outputFileName = new File(newApkName)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}